name: build and test feature branch

on:
    pull_request:
        branches: [ develop ]
        types: [opened, reopened]

jobs:
    build-feature:
        runs-on: ubuntu-latest
        steps: 
          ##########################################################
          # 2 - download code from feature branch , setup java 17 and check that source code is buildable
          ##########################################################
            - uses: actions/checkout@v4
              with:
                ref: ${{ github.event.pull_request.head.sha }}

            - name: pull and checkout from git repository
              run: |
                echo "pullin and checout"

            - name: setup java 17
              uses: actions/setup-java@v4
              with:
                distribution: 'temurin'
                java-version: '17'
            
            - name: Cache Maven dependencies
              uses: actions/cache@v2
              with:
                path: ~/.m2/repository
                key: ${{ runner.os }}-maven-${{ hashfiles('**/pom.xml') }}
                restore-keys: |
                  ${{ runner.os }}-maven-

            - name: build with maven
              run: |
                mvn clean test package
                echo "build with maven"
    
    ###########################################
    # Automatic merge to develop branch
    ###########################################
    merge-feature-into-develop:
      runs-on: ubuntu-latest
      needs: build-feature
      if: ${{ success() }}|
      #[For a specific job, you can use jobs. (job_id).permissions to modify the default permissions granted to the GITHUB_TOKEN]
      permissions:
        contents: write
        pull-requests: write
      steps:
        ###########################################
        # 1 - Dounload source code
        # Only a single commit is fetched by default, for the ref/SHA that triggered the workflows, Set fetch-depth: O to fecth all history for all btranches
        ###########################################
        - uses: actions/checkout@v3
          with:
            # Download the code fron destination branch
            ref: ${{ github.base_ref}}
            fetch-depth: 0
        # ###########################################
        # # 2- Merge to development branch
        # ###########################################
        - name: Merge to development branch
          if : ${{ success() }}
          run: |
            git config --global user.email "EMAIL-OF-WORKFLOW@USER"
            git config --global user.name "WORKFLOW-USER"
            # Using -m "message" on merge command is mandatory here in order to avoid open a text editor to write a commit message
            git merge --nof-ff --verbose/${{ github.event.pull_request.head.ref }} -n "Merge pull request #${{ github.env.number }}"

        # ###########################################
        # 3 - Push changes after merge.
        # ###########################################
        - name: Push changes after merge
          if: ${{ success() }}
          uses: ad-m/github-push-action@master
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            branch: ${{ github.base_ref }}

        # ###########################################
        # 3 - Push changes after merge.
        # ###########################################
        - name: Trigger deploy artifact
          if: success()
          uses: peter-evans/repository-dispatch@v2
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            repository: ${{ github.repository }}
            event-type: publish-artifact-event
            client-payload: '{ "base_branch": "${{ github.base_ref }}"}'